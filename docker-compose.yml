services:
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.22.0
    restart: always
    command:  --dbfilename dump --port 6379 --logtostderr --keys_output_limit 1000000 --max_client_iobuf_len 104857600 --max_multi_bulk_len 104857600 --snapshot_cron "0 * * * *"
    security_opt:
      - "seccomp:unconfined"
    ulimits:
      memlock: -1
    volumes:
      - dfdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      # Comment-out the line below for a cluster of multiple nodes
      - discovery.type=single-node
      # Uncomment the line below below for a cluster of multiple nodes
      # - cluster.name=docker-cluster
      - xpack.ml.enabled=false
      - xpack.security.enabled=false
      - thread_pool.search.queue_size=5000
      - logger.org.elasticsearch.discovery="ERROR"
      - "ES_JAVA_OPTS=-Xms${ELASTIC_MEMORY_SIZE} -Xmx${ELASTIC_MEMORY_SIZE}"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_NODENAME=rabbit01@localhost
    volumes:
      - amqpdata:/var/lib/rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  opencti-worker-cluster:
    image: opencti/platform:${OPENCTI_VERSION}
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8070
      - APP__BASE_URL=${OPENCTI_BASE_URL}
      - APP__ADMIN__EMAIL=${OPENCTI_ADMIN_EMAIL}
      - APP__ADMIN__PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - APP__ADMIN__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - APP__APP_LOGS__LOGS_LEVEL=info
      - REDIS__HOSTNAME=dragonfly
      - REDIS__PORT=6379
      - REDIS__TRIMMING=${REDIS_TRIMMING}
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - ELASTICSEARCH__MAX_CONCURRENCY=50
      - MINIO__ENDPOINT=${S3_ENDPOINT}
      - MINIO__PORT=443
      - MINIO__USE_SSL=true
      - MINIO__USE_AWS_ROLE=true
      - MINIO__ACCESS_KEY=
      - MINIO__SECRET_KEY=
      - MINIO__BUCKET_NAME=${S3_BUCKET}
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__PORT_MANAGEMENT=15672
      - RABBITMQ__MANAGEMENT_SSL=false
      - RABBITMQ__USERNAME=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ__PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - SMTP__HOSTNAME=${SMTP_HOSTNAME}
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
      - APP__HEALTH_ACCESS_KEY=${OPENCTI_HEALTHCHECK_ACCESS_KEY}
    depends_on:
      - dragonfly
      - elasticsearch
      - rabbitmq
    restart: always
    deploy:
      mode: replicated
      replicas: ${OPENCTI_WORKER_CLUSTER_REPLICAS}
      endpoint_mode: dnsrr
    healthcheck:
      test:  ["CMD", "wget", "-qO-", "http://opencti:8080/health?health_access_key=${OPENCTI_HEALTHCHECK_ACCESS_KEY}"]
      interval: 10s
      timeout: 5s
      retries: 20
  opencti-connector-cluster:
    image: opencti/platform:${OPENCTI_VERSION}
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8072
      - APP__BASE_URL=${OPENCTI_BASE_URL}
      - APP__ADMIN__EMAIL=${OPENCTI_ADMIN_EMAIL}
      - APP__ADMIN__PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - APP__ADMIN__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - APP__APP_LOGS__LOGS_LEVEL=info
      - REDIS__HOSTNAME=dragonfly
      - REDIS__PORT=6379
      - REDIS__TRIMMING=${REDIS_TRIMMING}
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - ELASTICSEARCH__MAX_CONCURRENCY=50
      - MINIO__ENDPOINT=${S3_ENDPOINT}
      - MINIO__PORT=443
      - MINIO__USE_SSL=true
      - MINIO__USE_AWS_ROLE=true
      - MINIO__ACCESS_KEY=
      - MINIO__SECRET_KEY=
      - MINIO__BUCKET_NAME=${S3_BUCKET}
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__PORT_MANAGEMENT=15672
      - RABBITMQ__MANAGEMENT_SSL=false
      - RABBITMQ__USERNAME=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ__PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - SMTP__HOSTNAME=${SMTP_HOSTNAME}
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
    depends_on:
      - dragonfly
      - elasticsearch
      - rabbitmq
    restart: always
    deploy:
      mode: replicated
      replicas: ${OPENCTI_CONNECTOR_CLUSTER_REPLICAS}
      endpoint_mode: dnsrr
    healthcheck:
      test:  ["CMD", "wget", "-qO-", "http://opencti:8080/health?health_access_key=${OPENCTI_HEALTHCHECK_ACCESS_KEY}"]
      interval: 10s
      timeout: 5s
      retries: 20
  opencti:
    image: opencti/platform:${OPENCTI_VERSION}
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8071
      - APP__BASE_URL=${OPENCTI_BASE_URL}
      - APP__ADMIN__EMAIL=${OPENCTI_ADMIN_EMAIL}
      - APP__ADMIN__PASSWORD=${OPENCTI_ADMIN_PASSWORD}
      - APP__ADMIN__TOKEN=${OPENCTI_ADMIN_TOKEN}
      - APP__APP_LOGS__LOGS_LEVEL=error
      - REDIS__HOSTNAME=dragonfly
      - REDIS__PORT=6379
      - REDIS__TRIMMING=${REDIS_TRIMMING}
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - ELASTICSEARCH__MAX_CONCURRENCY=50
      - MINIO__ENDPOINT=${S3_ENDPOINT}
      - MINIO__PORT=443
      - MINIO__USE_SSL=true
      - MINIO__USE_AWS_ROLE=true
      - MINIO__ACCESS_KEY=
      - MINIO__SECRET_KEY=
      - MINIO__BUCKET_NAME=${S3_BUCKET}
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__PORT_MANAGEMENT=15672
      - RABBITMQ__MANAGEMENT_SSL=false
      - RABBITMQ__USERNAME=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ__PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - SMTP__HOSTNAME=${SMTP_HOSTNAME}
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
      - APP__HEALTH_ACCESS_KEY=${OPENCTI_HEALTHCHECK_ACCESS_KEY}
    ports:
      - "8080:8080"
    depends_on:
      dragonfly:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
    healthcheck:
      test:  ["CMD", "wget", "-qO-", "http://opencti:8080/health?health_access_key=${OPENCTI_HEALTHCHECK_ACCESS_KEY}"]
      interval: 10s
      timeout: 5s
      retries: 20
    deploy:
      mode: replicated
      replicas: ${OPENCTI_FRONT_END_REPLICAS}
      endpoint_mode: dnsrr
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    depends_on:
      - opencti
    ports:
      - "8080:8080"
  worker:
    image: opencti/worker:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-worker-cluster.:8070
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - WORKER_LOG_LEVEL=info
    depends_on:
      opencti-worker-cluster:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 6
    restart: always
  connector-export-file-stix:
    image: opencti/connector-export-file-stix:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_STIX_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileStix2
      - CONNECTOR_SCOPE=application/json
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-export-file-csv:
    image: opencti/connector-export-file-csv:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_CSV_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileCsv
      - CONNECTOR_SCOPE=text/csv
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-export-file-txt:
    image: opencti/connector-export-file-txt:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_FILE_TXT_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportFileTxt
      - CONNECTOR_SCOPE=text/plain
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-import-file-stix:
    image: opencti/connector-import-file-stix:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_FILE_STIX_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportFileStix
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true # Validate any bundle before import
      - CONNECTOR_SCOPE=application/json,text/xml
      - CONNECTOR_AUTO=true # Enable/disable auto-import of file
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-import-document:
    image: opencti/connector-import-document:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_DOCUMENT_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_IMPORT_FILE
      - CONNECTOR_NAME=ImportDocument
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=true # Validate any bundle before import
      - CONNECTOR_SCOPE=application/pdf,text/plain,text/html
      - CONNECTOR_AUTO=true # Enable/disable auto-import of file
      - CONNECTOR_ONLY_CONTEXTUAL=false # Only extract data related to an entity (a report, a threat actor, etc.)
      - CONNECTOR_CONFIDENCE_LEVEL=15 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - IMPORT_DOCUMENT_CREATE_INDICATOR=true
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-analysis:
    image: opencti/connector-import-document:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ANALYSIS_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_ANALYSIS
      - CONNECTOR_NAME=ImportDocumentAnalysis
      - CONNECTOR_VALIDATE_BEFORE_IMPORT=false # Validate any bundle before import
      - CONNECTOR_SCOPE=application/pdf,text/plain,text/html
      - CONNECTOR_AUTO=true # Enable/disable auto-import of file
      - CONNECTOR_ONLY_CONTEXTUAL=false # Only extract data related to an entity (a report, a threat actor, etc.)
      - CONNECTOR_CONFIDENCE_LEVEL=15 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-opencti:
    image: opencti/connector-opencti:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_OPENCTI_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=OpenCTI
      - CONNECTOR_SCOPE=marking-definition,identity,location
      - CONNECTOR_CONFIDENCE_LEVEL=90 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - CONFIG_SECTORS_FILE_URL=https://raw.githubusercontent.com/OpenCTI-Platform/datasets/master/data/sectors.json
      - CONFIG_GEOGRAPHY_FILE_URL=https://raw.githubusercontent.com/OpenCTI-Platform/datasets/master/data/geography.json
      - CONFIG_INTERVAL=7 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-mitre:
    image: opencti/connector-mitre:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MITRE_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MITRE Datasets"
      - CONNECTOR_SCOPE=marking-definition,identity,attack-pattern,course-of-action,intrusion-set,campaign,malware,tool,report,x-mitre-data-component,x-mitre-data-source,external-reference-as-report
      - CONNECTOR_CONFIDENCE_LEVEL=75 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - MITRE_ENTERPRISE_FILE_URL=https://raw.githubusercontent.com/mitre-attack/attack-stix-data/master/enterprise-attack/enterprise-attack.json
      - MITRE_MOBILE_ATTACK_FILE_URL=https://raw.githubusercontent.com/mitre-attack/attack-stix-data/master/mobile-attack/mobile-attack.json
      - MITRE_ICS_ATTACK_FILE_URL=https://raw.githubusercontent.com/mitre-attack/attack-stix-data/master/ics-attack/ics-attack.json
      - MITRE_CAPEC_FILE_URL=https://raw.githubusercontent.com/mitre/cti/master/capec/2.1/stix-capec.json
      - MITRE_INTERVAL=7 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-disarm-framework:
    image: opencti/connector-disarm-framework:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_DISARM_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=DISARM Framework"
      - CONNECTOR_SCOPE=marking-definition,identity,attack-pattern,course-of-action,intrusion-set,campaign,malware,tool,report,narrative,event,channel
      - CONNECTOR_CONFIDENCE_LEVEL=75 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - DISARM_FRAMEWORK_URL=https://raw.githubusercontent.com/DISARMFoundation/DISARMframeworks/main/generated_files/DISARM_STIX/DISARM.json
      - DISARM_FRAMEWORK_INTERVAL=7 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-cisa-known-exploited-vulnerabilities:
    image: opencti/connector-cisa-known-exploited-vulnerabilities:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_CISA_VULNS_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=CISA Known Exploited Vulnerabilities"
      - CONNECTOR_SCOPE=identity,infrastructure,vulnerability
      - CONNECTOR_CONFIDENCE_LEVEL=100 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - CISA_CATALOG_URL=https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json
      - CISA_TLP=TLP:CLEAR
      - CISA_INTERVAL=2 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-cve:
    image: opencti/connector-cve:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_CVE_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=Common Vulnerabilities and Exposures
      - CONNECTOR_SCOPE=identity,vulnerability
      - CONNECTOR_CONFIDENCE_LEVEL=75 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - CVE_IMPORT_HISTORY=true # Import history at the first run (after only recent), reset the connector state if you want to re-import
      - CVE_BASE_URL=https://services.nvd.nist.gov/rest/json/cves
      - CVE_MAINTAIN_DATA=true
      - CVE_PULL_HISTORY=true
      - CVE_HISTORY_START_YEAR=2002
      - CVE_INTERVAL=2 # In days, must be strictly greater than 1
      - CVE_API_KEY=${CONNECTOR_CVE_APIKEY}
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-malpedia:
    image: opencti/connector-malpedia:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MALPEDIA_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=Malpedia
      - CONNECTOR_SCOPE=malpedia
      - CONNECTOR_CONFIDENCE_LEVEL=30 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_LOG_LEVEL=info
      - MALPEDIA_AUTH_KEY= # Empty key only fetches TLP:WHITE information
      - MALPEDIA_INTERVAL_SEC=86400 # Run once every day
      - MALPEDIA_IMPORT_INTRUSION_SETS=true
      - MALPEDIA_IMPORT_YARA=true
      - MALPEDIA_CREATE_INDICATORS=true
      - MALPEDIA_CREATE_OBSERVABLES=true
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-misp-feed-botvrij:
    image: opencti/connector-misp-feed:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MISP_FEED_BOTVRIJ_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MISP Feed (botvrij)"
      - CONNECTOR_SCOPE=misp-feed
      - CONNECTOR_CONFIDENCE_LEVEL=20 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - MISP_FEED_URL=https://www.botvrij.eu/data/feed-osint/
      - MISP_FEED_SSL_VERIFY=true # Required
      - MISP_FEED_IMPORT_FROM_DATE=2000-01-01 # Required, import all event from this date
      - MISP_FEED_CREATE_REPORTS=true # Required, create report for MISP event
      - MISP_FEED_REPORT_TYPE=misp-event
      - MISP_FEED_CREATE_INDICATORS=true # Required, create indicators from attributes
      - MISP_FEED_CREATE_OBSERVABLES=true # Required, create observables from attributes
      - MISP_FEED_CREATE_OBJECT_OBSERVABLES=true # Required, create text observables for MISP objects
      - MISP_FEED_IMPORT_TO_IDS_NO_SCORE=40 # Optional, use as a score for the indicator/observable if the attribute to_ids is no
      - MISP_FEED_IMPORT_UNSUPPORTED_OBSERVABLES_AS_TEXT=false #  Optional, import unsupported observable as x_opencti_text
      - MISP_FEED_IMPORT_WITH_ATTACHMENTS=yes # Optional, try to import a PDF file from the attachment attribute
      - MISP_FEED_INTERVAL=60 # Required, in minutes
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-misp-feed-circl:
    image: opencti/connector-misp-feed:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MISP_FEED_CIRCL_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MISP Feed (CIRCL)"
      - CONNECTOR_SCOPE=misp-feed
      - CONNECTOR_CONFIDENCE_LEVEL=20 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - MISP_FEED_URL=https://www.circl.lu/doc/misp/feed-osint/
      - MISP_FEED_SSL_VERIFY=true # Required
      - MISP_FEED_IMPORT_FROM_DATE=2000-01-01 # Required, import all event from this date
      - MISP_FEED_CREATE_REPORTS=true # Required, create report for MISP event
      - MISP_FEED_REPORT_TYPE=misp-event
      - MISP_FEED_CREATE_INDICATORS=true # Required, create indicators from attributes
      - MISP_FEED_CREATE_OBSERVABLES=true # Required, create observables from attributes
      - MISP_FEED_CREATE_OBJECT_OBSERVABLES=true # Required, create text observables for MISP objects
      - MISP_FEED_IMPORT_TO_IDS_NO_SCORE=40 # Optional, use as a score for the indicator/observable if the attribute to_ids is no
      - MISP_FEED_IMPORT_UNSUPPORTED_OBSERVABLES_AS_TEXT=false #  Optional, import unsupported observable as x_opencti_text
      - MISP_FEED_IMPORT_WITH_ATTACHMENTS=yes # Optional, try to import a PDF file from the attachment attribute
      - MISP_FEED_INTERVAL=60 # Required, in minutes
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-misp-feed-threatfox:
    image: opencti/connector-misp-feed:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MISP_FEED_THREATFOX_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MISP Feed (ThreatFox)"
      - CONNECTOR_SCOPE=misp-feed
      - CONNECTOR_CONFIDENCE_LEVEL=20 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - MISP_FEED_URL=https://threatfox.abuse.ch/downloads/misp/
      - MISP_FEED_SSL_VERIFY=true # Required
      - MISP_FEED_IMPORT_FROM_DATE=2000-01-01 # Required, import all event from this date
      - MISP_FEED_CREATE_REPORTS=true # Required, create report for MISP event
      - MISP_FEED_REPORT_TYPE=misp-event
      - MISP_FEED_CREATE_INDICATORS=true # Required, create indicators from attributes
      - MISP_FEED_CREATE_OBSERVABLES=true # Required, create observables from attributes
      - MISP_FEED_CREATE_OBJECT_OBSERVABLES=true # Required, create text observables for MISP objects
      - MISP_FEED_IMPORT_TO_IDS_NO_SCORE=40 # Optional, use as a score for the indicator/observable if the attribute to_ids is no
      - MISP_FEED_IMPORT_UNSUPPORTED_OBSERVABLES_AS_TEXT=false #  Optional, import unsupported observable as x_opencti_text
      - MISP_FEED_IMPORT_WITH_ATTACHMENTS=yes # Optional, try to import a PDF file from the attachment attribute
      - MISP_FEED_INTERVAL=60 # Required, in minutes
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-misp-feed-digitalside:
    image: opencti/connector-misp-feed:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MISP_FEED_DIGITALSIDE_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MISP Feed (DigitalSide)"
      - CONNECTOR_SCOPE=misp-feed
      - CONNECTOR_CONFIDENCE_LEVEL=20 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - MISP_FEED_URL=https://osint.digitalside.it/Threat-Intel/digitalside-misp-feed/
      - MISP_FEED_SSL_VERIFY=true # Required
      - MISP_FEED_IMPORT_FROM_DATE=2000-01-01 # Required, import all event from this date
      - MISP_FEED_CREATE_REPORTS=true # Required, create report for MISP event
      - MISP_FEED_REPORT_TYPE=misp-event
      - MISP_FEED_CREATE_INDICATORS=true # Required, create indicators from attributes
      - MISP_FEED_CREATE_OBSERVABLES=true # Required, create observables from attributes
      - MISP_FEED_CREATE_OBJECT_OBSERVABLES=true # Required, create text observables for MISP objects
      - MISP_FEED_IMPORT_TO_IDS_NO_SCORE=40 # Optional, use as a score for the indicator/observable if the attribute to_ids is no
      - MISP_FEED_IMPORT_UNSUPPORTED_OBSERVABLES_AS_TEXT=false #  Optional, import unsupported observable as x_opencti_text
      - MISP_FEED_IMPORT_WITH_ATTACHMENTS=yes # Optional, try to import a PDF file from the attachment attribute
      - MISP_FEED_INTERVAL=60 # Required, in minutes
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-misp-feed-cert-fr:
    image: opencti/connector-misp-feed:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MISP_FEED_CERT_FR_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MISP Feed (CERT-FR)"
      - CONNECTOR_SCOPE=misp-feed
      - CONNECTOR_CONFIDENCE_LEVEL=20 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_RUN_AND_TERMINATE=false
      - CONNECTOR_LOG_LEVEL=info
      - MISP_FEED_URL=https://misp.cert.ssi.gouv.fr/feed-misp/
      - MISP_FEED_SSL_VERIFY=true # Required
      - MISP_FEED_IMPORT_FROM_DATE=2000-01-01 # Required, import all event from this date
      - MISP_FEED_CREATE_REPORTS=true # Required, create report for MISP event
      - MISP_FEED_REPORT_TYPE=misp-event
      - MISP_FEED_CREATE_INDICATORS=true # Required, create indicators from attributes
      - MISP_FEED_CREATE_OBSERVABLES=true # Required, create observables from attributes
      - MISP_FEED_CREATE_OBJECT_OBSERVABLES=true # Required, create text observables for MISP objects
      - MISP_FEED_IMPORT_TO_IDS_NO_SCORE=40 # Optional, use as a score for the indicator/observable if the attribute to_ids is no
      - MISP_FEED_IMPORT_UNSUPPORTED_OBSERVABLES_AS_TEXT=false #  Optional, import unsupported observable as x_opencti_text
      - MISP_FEED_IMPORT_WITH_ATTACHMENTS=yes # Optional, try to import a PDF file from the attachment attribute
      - MISP_FEED_INTERVAL=60 # Required, in minutes
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-urlhaus:
    image: opencti/connector-urlhaus:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_URLHAUS_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=Abuse.ch URLhaus"
      - CONNECTOR_SCOPE=urlhaus
      - CONNECTOR_CONFIDENCE_LEVEL=40 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_LOG_LEVEL=info
      - URLHAUS_CSV_URL=https://urlhaus.abuse.ch/downloads/csv_recent/
      - URLHAUS_IMPORT_OFFLINE=true
      - URLHAUS_CREATE_INDICATORS=true
      - URLHAUS_THREATS_FROM_LABELS=true
      - URLHAUS_INTERVAL=3 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-valhalla:
    image: opencti/connector-valhalla:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_VALHALLA_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=Valhalla
      - CONNECTOR_SCOPE=valhalla
      - CONNECTOR_CONFIDENCE_LEVEL=50 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_LOG_LEVEL=info
      - VALHALLA_API_KEY= # Empty key only fetches public/demo information
      - VALHALLA_INTERVAL_SEC=86400 # Run once every day
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-vxvault:
    image: opencti/connector-vxvault:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_VXVAULT_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=VX Vault URL list"
      - CONNECTOR_SCOPE=vxvault
      - CONNECTOR_CONFIDENCE_LEVEL=40 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_LOG_LEVEL=info
      - VXVAULT_URL=http://vxvault.net/URL_List.php
      - VXVAULT_CREATE_INDICATORS=true
      - VXVAULT_INTERVAL=3 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-export-report-pdf:
    image: opencti/connector-export-report-pdf:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_PDF_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - "CONNECTOR_NAME=Export PDF Report"
      - CONNECTOR_SCOPE=application/pdf
      - CONNECTOR_CONFIDENCE_LEVEL=100 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - EXPORT_REPORT_PDF_PRIMARY_COLOR=#ff8c00 # The primary color for the output pdf
      - EXPORT_REPORT_PDF_SECONDARY_COLOR=#000000 # The secondary color for the output pdf
      - EXPORT_REPORT_PDF_COMPANY_ADDRESS_LINE_1=${EXPORT_PDF_ADDRESS1} # The first line of your company address
      - EXPORT_REPORT_PDF_COMPANY_ADDRESS_LINE_2=${EXPORT_PDF_ADDRESS2}
      - EXPORT_REPORT_PDF_COMPANY_ADDRESS_LINE_3=${EXPORT_PDF_ADDRESS3}
      - EXPORT_REPORT_PDF_COMPANY_PHONE_NUMBER=${EXPORT_PDF_PHONE} # The phone number of your company
      - EXPORT_REPORT_PDF_COMPANY_EMAIL=${EXPORT_PDF_EMAIL} # The email of your company
      - EXPORT_REPORT_PDF_COMPANY_WEBSITE=${EXPORT_PDF_URL} # The website of your company
      - EXPORT_REPORT_PDF_INDICATORS_ONLY=false # Whether or not to only include Observables that are Indicators in the report
      - EXPORT_REPORT_PDF_DEFANG_URLS=false # Replace http in Url observables with hxxp
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-malware-bazaar-recent-additions:
    image: opencti/connector-malwarebazaar-recent-additions:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_MALWARE_BAZAAR_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=MalwareBazaar Recent Additions"
      - CONNECTOR_CONFIDENCE_LEVEL=50 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_LOG_LEVEL=info
      - MALWAREBAZAAR_RECENT_ADDITIONS_API_URL=https://mb-api.abuse.ch/api/v1/
      - MALWAREBAZAAR_RECENT_ADDITIONS_COOLDOWN_SECONDS=300 # Time to wait in seconds between subsequent requests
      - MALWAREBAZAAR_RECENT_ADDITIONS_INCLUDE_TAGS=exe,dll,docm,docx,doc,xls,xlsx,xlsm,js # (Optional) Only download files if any tag matches. (Comma separated)
      - MALWAREBAZAAR_RECENT_ADDITIONS_LABELS=malware-bazar # (Optional) Labels to apply to uploaded Artifacts. (Comma separated)
      - MALWAREBAZAAR_RECENT_ADDITIONS_LABELS_COLOR=#54483b # Color to use for labels
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-shodan-internetdb:
    image: opencti/connector-shodan-internetdb:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_SHODAN_INTERNETDB_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=Shodan InternetDB
      - CONNECTOR_SCOPE=IPv4-Addr
      - CONNECTOR_CONFIDENCE_LEVEL=75
      - CONNECTOR_AUTO=true
      - CONNECTOR_LOG_LEVEL=info
      - SHODAN_MAX_TLP=white
      - SHODAN_SSL_VERIFY=true
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-hygiene:
    image: opencti/connector-hygiene:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_HYGIENE_ID} # Valid UUIDv4
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=Hygiene
      - CONNECTOR_SCOPE=IPv4-Addr,IPv6-Addr,Domain-Name,StixFile,Artifact
      - CONNECTOR_AUTO=true
      - CONNECTOR_CONFIDENCE_LEVEL=15 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - HYGIENE_WARNINGLISTS_SLOW_SEARCH=false # Enable warning lists slow search mode
      - HYGIENE_ENRICH_SUBDOMAINS=false # Enrich subdomains with hygiene_parent label if the parents are found in warninglists
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-greynoise:
    image: opencti/connector-greynoise:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_GREYNOISE_ID}
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=GreyNoise
      - CONNECTOR_SCOPE=IPv4-Addr
      - CONNECTOR_AUTO=true
      - CONNECTOR_CONFIDENCE_LEVEL=80 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - GREYNOISE_KEY=${CONNECTOR_GREYNOISE_APIKEY}
      - GREYNOISE_MAX_TLP=TLP:AMBER
      - GREYNOISE_NAME=GreyNoise
      - "GREYNOISE_DESCRIPTION=GreyNoise collects and analyzes untargeted, widespread, and opportunistic scan and attack activity that reaches every server directly connected to the Internet."
      - GREYNOISE_SIGHTING_NOT_SEEN=false
      - GREYNOISE_SPOOFABLE_CONFIDENCE_LEVEL=30
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-google-dns:
    image: opencti/connector-google-dns:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_GOOGLE_DNS_ID}
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=Google DNS
      - CONNECTOR_SCOPE=Domain-Name # MIME type or Stix Object
      - CONNECTOR_AUTO=true
      - CONNECTOR_CONFIDENCE_LEVEL=100 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-shodan:
    image: opencti/connector-shodan:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_SHODAN_ID}
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=Shodan
      - CONNECTOR_SCOPE=IPv4-Addr
      - CONNECTOR_AUTO=true
      - CONNECTOR_CONFIDENCE_LEVEL=75 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - SHODAN_TOKEN=${CONNECTOR_SHODAN_APIKEY}
      - SHODAN_MAX_TLP=TLP:AMBER
      - SHODAN_CREATE_INDICATORS=true
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-abuse-ssl:
    image: opencti/connector-abuse-ssl:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ABUSE_SSL_ID}
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - "CONNECTOR_NAME=Abuse.ch SSL Blacklist"
      - CONNECTOR_SCOPE=abusessl
      - CONNECTOR_CONFIDENCE_LEVEL=70
      - CONNECTOR_UPDATE_EXISTING_DATA=true
      - CONNECTOR_LOG_LEVEL=info
      - ABUSESSL_URL=https://sslbl.abuse.ch/blacklist/sslipblacklist.csv
      - ABUSESSL_INTERVAL=10 # Time to wait in minutes between subsequent requests
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-tweetfeed:
    image: opencti/connector-tweetfeed:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_TWEETFEED_ID}
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=Tweetfeed
      - CONNECTOR_SCOPE=tweetfeed
      - CONNECTOR_CONFIDENCE_LEVEL=15
      - CONNECTOR_LOG_LEVEL=info
      - TWEETFEED_CONFIDENCE_LEVEL=15 # From 0 (Unknown) to 100 (Fully trusted)
      - TWEETFEED_CREATE_INDICATORS=true
      - TWEETFEED_CREATE_OBSERVABLES=true
      - TWEETFEED_INTERVAL=1
      - TWEETFEED_UPDATE_EXISTING_DATA=true
      - "TWEETFEED_ORG_DESCRIPTION=Tweetfeed, a connector to import IOC from Twitter."
      - TWEETFEED_ORG_NAME=Tweetfeed
      - TWEETFEED_DAYS_BACK_IN_TIME=365 # Number of days to retrieve data back in time
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-phishunt:
    image: opencti/connector-phishunt:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_PHISHUNT_ID}
      - CONNECTOR_TYPE=EXTERNAL_IMPORT
      - CONNECTOR_NAME=Phishunt
      - CONNECTOR_SCOPE=phishunt
      - CONNECTOR_CONFIDENCE_LEVEL=40 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_UPDATE_EXISTING_DATA=false
      - CONNECTOR_LOG_LEVEL=info
      - PHISHUNT_URL=https://phishunt.io/feed.txt
      - PHISHUNT_CREATE_INDICATORS=true
      - PHISHUNT_INTERVAL=3 # In days, must be strictly greater than 1
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-yara:
    image: opencti/connector-yara:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_YARA_ID}
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=YARA
      - CONNECTOR_SCOPE=Artifact # MIME type or Stix Object
      - CONNECTOR_AUTO=true
      - CONNECTOR_CONFIDENCE_LEVEL=100 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-import-external-reference:
    image: opencti/connector-import-external-reference:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_IMPORT_EXTERNAL_REFERENCE_ID}
      - CONNECTOR_TYPE=INTERNAL_ENRICHMENT
      - CONNECTOR_NAME=ImportExternalReference
      - CONNECTOR_SCOPE=External-Reference
      - CONNECTOR_AUTO=false # Enable/disable auto-import of external references
      - CONNECTOR_CONFIDENCE_LEVEL=15 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - IMPORT_EXTERNAL_REFERENCE_IMPORT_AS_PDF=true # Import as PDF file
      - IMPORT_EXTERNAL_REFERENCE_IMPORT_AS_MD=true # Import as MarkDown file
      - IMPORT_EXTERNAL_REFERENCE_IMPORT_PDF_AS_MD=true # If import_as_md is true, try to convert PDF as Markdown
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-export-ttps-file-navigator:
    image: opencti/connector-export-ttps-file-navigator:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_EXPORT_TTPS_FILE_NAVIGATOR}
      - CONNECTOR_TYPE=INTERNAL_EXPORT_FILE
      - CONNECTOR_NAME=ExportTTPsFileNavigator
      - CONNECTOR_SCOPE=application/vnd.mitre.navigator+json
      - CONNECTOR_CONFIDENCE_LEVEL=100 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=error
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-hatching-triage-sandbox-auto:
    image: opencti/connector-hatching-triage-sandbox:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=Hatching_Triage_Sandbox_Auto
      - "CONNECTOR_NAME=Hatching Triage Sandbox (Auto)"
      - CONNECTOR_SCOPE=Artifact
      - CONNECTOR_AUTO=true # Enable/disable auto-enrichment of observables
      - CONNECTOR_CONFIDENCE_LEVEL=50 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - HATCHING_TRIAGE_SANDBOX_BASE_URL=https://tria.ge/api # Public URL, see https://tria.ge/docs/
      - HATCHING_TRIAGE_SANDBOX_TOKEN=${CONNECTOR_HATCHING_TRIAGE_SANDBOX_TOKEN}
      - HATCHING_TRIAGE_SANDBOX_USE_EXISTING_ANALYSIS=true # If true, get existing analysis if any
      - HATCHING_TRIAGE_SANDBOX_FAMILY_COLOR=#0059f7 # Label color for family
      - HATCHING_TRIAGE_SANDBOX_BOTNET_COLOR=#f79e00 # Label color for botnet
      - HATCHING_TRIAGE_SANDBOX_CAMPAIGN_COLOR=#7a01e5 # Label color for campaign
      - HATCHING_TRIAGE_SANDBOX_TAG_COLOR=#54483b # Label color for all other labels
      - HATCHING_TRIAGE_SANDBOX_MAX_TLP=TLP:CLEAR
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-hatching-triage-sandbox:
    image: opencti/connector-hatching-triage-sandbox:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=Hatching_Triage_Sandbox_Manual
      - "CONNECTOR_NAME=Hatching Triage Sandbox (Manual)"
      - CONNECTOR_SCOPE=Artifact
      - CONNECTOR_AUTO=false # Enable/disable auto-enrichment of observables
      - CONNECTOR_CONFIDENCE_LEVEL=50 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - HATCHING_TRIAGE_SANDBOX_BASE_URL=https://tria.ge/api # Public URL, see https://tria.ge/docs/
      - HATCHING_TRIAGE_SANDBOX_TOKEN=${CONNECTOR_HATCHING_TRIAGE_SANDBOX_TOKEN}
      - HATCHING_TRIAGE_SANDBOX_USE_EXISTING_ANALYSIS=true # If true, get existing analysis if any
      - HATCHING_TRIAGE_SANDBOX_FAMILY_COLOR=#0059f7 # Label color for family
      - HATCHING_TRIAGE_SANDBOX_BOTNET_COLOR=#f79e00 # Label color for botnet
      - HATCHING_TRIAGE_SANDBOX_CAMPAIGN_COLOR=#7a01e5 # Label color for campaign
      - HATCHING_TRIAGE_SANDBOX_TAG_COLOR=#54483b # Label color for all other labels
      - HATCHING_TRIAGE_SANDBOX_MAX_TLP=TLP:AMBER
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-alienvault:
    image: opencti/connector-alienvault:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ALIENVAULT_ID}
      - CONNECTOR_NAME=AlienVault
      - CONNECTOR_SCOPE=alienvault
      - CONNECTOR_CONFIDENCE_LEVEL=15 # From 0 (Unknown) to 100 (Fully trusted)
      - CONNECTOR_LOG_LEVEL=info
      - ALIENVAULT_BASE_URL=https://otx.alienvault.com
      - ALIENVAULT_API_KEY=${CONNECTOR_ALIENVAULT_APIKEY}
      - ALIENVAULT_TLP=White
      - ALIENVAULT_CREATE_OBSERVABLES=true
      - ALIENVAULT_CREATE_INDICATORS=true
      - ALIENVAULT_PULSE_START_TIMESTAMP=2023-05-01T00:00:00                  # BEWARE! Could be a lot of pulses!
      - ALIENVAULT_REPORT_TYPE=threat-report
      - ALIENVAULT_REPORT_STATUS=New
      - ALIENVAULT_GUESS_MALWARE=true                                         # Use tags to guess malware.
      - ALIENVAULT_GUESS_CVE=true                                             # Use tags to guess CVE.
      - ALIENVAULT_ENABLE_RELATIONSHIPS=true                                  # Enable/Disable relationship creation between SDOs.
      - ALIENVAULT_ENABLE_ATTACK_PATTERNS_INDICATES=false                     # Enable/Disable "indicates" relationships between indicators and attack patterns
      - ALIENVAULT_INTERVAL_SEC=1800
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
  connector-attribution-tools:
    image: opencti/connector-attribution-tools:${OPENCTI_VERSION}
    environment:
      - OPENCTI_URL=http://opencti-connector-cluster.:8072
      - OPENCTI_TOKEN=${OPENCTI_ADMIN_TOKEN}
      - CONNECTOR_ID=${CONNECTOR_ATTRIBUTION_TOOLS_ID}
      - CONNECTOR_NAME=attribution-tools
      - CONNECTOR_SCOPE=Incident
      - CONNECTOR_AUTO=false
      - CONNECTOR_CONFIDENCE_LEVEL=3
      - CONNECTOR_LOG_LEVEL=info
      - ATTRIBUTIONTOOLS_MODEL_TRAINING_CRON_UTC=0 0 * * *
      - ATTRIBUTIONTOOLS_N_TRAINING_QUERY_THREADS=1
      - ATTRIBUTIONTOOLS_DEFAULT_RELATION_CONFIDENCE=50
      - ATTRIBUTIONTOOLS_AUTOMATIC_RELATION_CREATION=false
      - ATTRIBUTIONTOOLS_RELATION_CREATION_PROBABILITY_TRESHOLD=0.95
      - ATTRIBUTIONTOOLS_CREATOR_ORG_IDENTITY_ID=${CONNECTOR_ATTRIBUTION_TOOLS_CREATOR_ORG_IDENTITY_ID}
    restart: always
    depends_on:
      opencti-connector-cluster:
        condition: service_healthy
    volumes:
      - attrdata:/data

volumes:
  esdata:
  s3data:
  dfdata:
  amqpdata:
  attrdata:
